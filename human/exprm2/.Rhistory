mu1 = [1 2];
sigma1 = [2 0; 0 .5];
mu2 = [-3 -5];
sigma2 = [1 0; 0 1];
rng(1); % For reproducibility
X = [mvnrnd(mu1,sigma1,1000);
mvnrnd(mu2,sigma2,1000)];
library(mvnrnd)
install.packages("mvnrnd")
library(mvnrnd)
setwd("C:/Users/xb2/Desktop/MABpeople/Human/Results/study1")
dt <- read.csv('study1transformed.csv')
primdt_a <- dt[which(dt$reward=='identical' & dt$bias=='no'),]
summary(lm(choice_herf ~ sampling,data=primdt_a))
m1<-lm(choice_herf ~ sampling,data=primdt_a)
confint(m1)
m2<-lm(reward_var ~ sampling,data=primdt_a)
summary(m2)
confint(m2)
cor.test(primdt_a$choice_herf,primdt_a$reward_var)
setwd("C:/Users/xb2/Desktop/MABpeople/Human/Results/study3")
dt <- read.csv('study3transformed.csv')
dt <- within(dt, condition <- relevel(condition, ref = "random-meet"))
# model
summary(lm(choice_herf ~ condition,data=dt))
dt <- within(dt, condition <- relevel(condition, ref = "random_meet"))
# model
summary(lm(choice_herf ~ condition,data=dt))
m1=lm(choice_herf ~ condition,data=dt)
confint(m1)
m2=lm(reward_var ~ condition,data=dt)
summary(m2)
confint(m2)
dt <- within(dt, condition <- relevel(condition, ref = "self_select"))
summary(lm(reward_var ~ condition,data=dt))
m2=lm(reward_var ~ condition,data=dt)
confint(m2)
dt <- within(dt, condition <- relevel(condition, ref = "yoke_both"))
m1=lm(reward_var ~ condition,data=dt)
summary(m1)
confint(m1)
